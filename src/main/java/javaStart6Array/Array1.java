package javaStart6Array;

public class Array1 {
    public static void main(String[] args) {
        int[] students; // 배열 변수 선언
        students = new int[4]; // 배열 생성

        // 변수 값 대입
        students[0] = 90;
        students[1] = 60;
        students[2] = 70;
        students[3] = 30;

        // 변수 갑 사용
        System.out.println("학생1 점수: " + students[0]);
        System.out.println("학생2 점수: " + students[1]);
        System.out.println("학생3 점수: " + students[2]);
        System.out.println("학생4 점수: " + students[3]);

        // 참조 값 확인
        System.out.println(students);
    }
}

/**
 * 반복문으로 해결할 수 있을 것 같지만, 점수를 출력하는 부분을 보면 변수의 이름이 다르기 때문에 반복문도 적용할 수 없다.
 * 같은 타입의 변수를 반복해서 선언하고 반복해서 사용하는 문제를 해결하는 것이 바로 배열이다.
 * 배열은 같은 타입의 변수를 사용하기 편하게 하나로 묶어둔 것이다.
 */

/** 배열의 선언
 * 배열을 사용하려면 `int[] students;` 와 같이 배열 변수를 선언해야 한다.
 * 일반적인 변수와 차이점은 `int[]` 처럼 타입 다음에 대괄호(`[]` )가 들어간다는 점이다.
 * 배열 변수를 선언한다고해서 아직 사용할 수 있는 배열이 만들어진 것은 아니다!
 * 배열 변수에는 10, 20 같은 값이 아니라 배열이라는 것을 담을 수 있다.
 */

/** 배열의 생성, 초기화
 * 배열을 사용하려면 배열을 생성해야 한다.
 * new` 는 새로 생성한다는 뜻이고, `int[5]` 는 `int` 형 변수 5개라는 뜻이다. 따라서 `int` 형 변수 5개를 다룰 수 있는 배열을 새로 만든다는 뜻이다.
 * new int[5]` 라고 하면 총 5개의 `int` 형 변수가 만들어진다. 자바는 배열을 생성할 때 그 내부값을 자동으로 초기화한다.
 * 숫자는 `0` , `boolean` 은 `false` , `String` 은 `null` (없다는 뜻이다.)로 초기화 된다.
 */

/** 배열의 참조값 보관
 * new int[5]`로 배열을 생성하면 배열의 크기만큼 메모리를 확보한다.
 * 배열을 생성하고 나면 자바는 메모리 어딘가에 있는 이 배열에 접근할 수 있는 참조값(주소)을 반환한다.
 * 앞서 선언한 배열 변수인 `int[] students` 에 생성된 배열의 참조값을 보관한다.
 * 이 참조값을 통해 배열을 참조할 수 있다. 쉽게 이야기해서 참조값을 통해 메모리에 있는 실제 배열에 접근하고 사용할 수 있다.
 * [I@7ea987ac @앞의 [I는 int형 배열을 뜻한다. @뒤에 16진수는 참조값을 뜻한다.
 */

/** 배열의 사용
 * 배열을 사용하려면 []` 사이에 숫자 번호를 넣어주면 된다. 배열의 위치를 나타내는 숫자를 인덱스(index)라 한다.
 * 배열은 0부터 시작한다
 * 배열에 값을 대입하든 배열의 값을 사용하든 간에 일반적인 변수와 사용법은 같다. 추가로 `[]` 를 통해 인덱스만 넣어주면 된다.
 */

/** 기본형 vs 참조형
 * 사용하는 값을 직접 넣을 수 있는 기본형, 그리고 방금 본 배열 변수와 같이 메모리의 참조값을 넣을 수 있는 참조형으로 분류할 수 있다.
 * 기본형(Primitive Type): 우리가 지금까지 봤던 `int` , `long` , `double` , `boolean` 처럼 변수에 사용할 값을 직접 넣을 수 있는 데이터 타입을 기본형(Primitive Type)이라 한다.
 * 참조형(Reference Type):`int[] students` 와 같이 데이터에 접근하기 위한 참조(주소)를 저장하는 데이터 타입을 참조형(Reference Type)이라 한다. 뒤에서 학습하는 객체나 클래스를 담을 수 있는 변수들도 모두 참조형이다.
 * 기본형은 사용할 값을 직접 저장한다. 반면에 참조형은 메모리에 저장된 배열이나 객체의 참조를 저장한다.
 */


















